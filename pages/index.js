import Head from 'next/head'
import Image from 'next/image'
import CardDisplay from '../Components/Card Display/cardDisplay'
import styles from '../styles/Home.module.css'
import Map from '../Components/map'
import FilterBar from '../Components/Filter Bar/filterBar'
import dynamic from 'next/dynamic'
import React, { useEffect, useState } from 'react'
//import CategoryFilter from '../Components/Category Filter/categoryFilter'
 


const MapComponent = dynamic(() => import("../Components/map.js"), {
    loading: () => "Loading...",
    ssr: false
  });





export default function Home() {

  const [categoryState, setCategoryState] = useState("")
  const [allLocationData , setAllLocationData] = useState([])
  const[displayedData,setDisplayedData]= useState([])
  const [regionState, setRegionState] = useState("")

  useEffect(() => {
    const fetchData = async () => {
      const url = `https://untrodden.herokuapp.com/locations`;
      try {
        const response = await fetch(url);
        const data = await response.json();
        setAllLocationData(data.payload);
        setDisplayedData(data.payload)
              } catch (error) {
        console.log('error', error);
      }
    }
    fetchData()
  } ,[])

  function onChangeRegionState(event){
    
     setRegionState(event.target.value)
     setDisplayedData([...allLocationData.filter(location =>location.region === event.target.value)])
 }


  function onChangeCategoryState(event){
        console.log(event.target.value);
      setCategoryState(event.target.value)   
  setDisplayedData([...allLocationData.filter(location =>location.categories.includes(event.target.value))])

}




 let category = [
  {value:"category_seaside", label:"Seaside"} ,
  {value:"category_castles", label:"Castles"},
  {value:"category_caves", label:"Caves"},
  {value:"category_peaceful", label:"Peaceful"},
  {value:"category_hiking", label:"Hiking"},
  {value:"category_hills", label:"Hills"},
  {value:"category_historic", label:"Historic"},
  {value:"category_secluded", label:"Secluded"},
  {value:"category_casual", label:"Casual"},
  {value:"category_lakes", label:"Lake"},
  {value:"category_woods", label:"Woods"},
  {value:"category_busy", label:"Busy"},
]
let regions = [
  {value:"London",label:"London"},
  {value:"North East",label:"North East"},
  {value:"North West",label:"North West"}, 
  {value:"Yorkshire",label:"Yorkshire"}, 
  {value:"East Midlands",label:"East Midlands"}, 
  {value:"West Midlands",label:"West Midlands"}, 
  {value:"South East",label:"South East"}, 
  {value:"East of England",label:"East of England"},
  {value:"South West",label:"South West"},
  {value:"North Wales",label:"North Wales"},
  {value:"South West Wales",label:"South West Wales"},
  {value:"South East Wales",label:"South East Wales"},
  {value:"Mid Wales",label:"Mid Wales"},
  {value:"South West Scotland",label:"South West Scotland"},
  {value:"North East Scotland",label:"North East Scotland"},
  {value:"Central Scotland East",label:"Central Scotland East"},
  {value:"Central Scotland West",label:"Central Scotland West"},
  {value:"Sottish Highlands and Western Isles",label:"Sottish Highlands and Western Isles"},
  {value:"Shetland and the Orkney Islands",label:"Shetland and the Orkney Islands"},
  {value:"Edinburgh",label:"Edinburgh"},
  {value:"Glasgow",label:"Glasgow"},
  {value:"Antrim",label:"Antrim"},
  {value:"Armagh",label:"Armagh"},
  {value:"Down",label:"Down"},
  {value:"Fermanagh",label:"Fermanagh"},
  {value:"Londonderry",label:"Londonderry"},
  {value:"Tyrone",label:"Tyrone"},
]


  console.log(allLocationData)


  return (
    <div className={styles.container}>
      <Head>
        <title>Untrodden</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
      <select className={styles.dropdown} id="regions" onChange={onChangeRegionState} value={regionState}>
  <option value="0">Region:</option>
  {regions.map(reg => <option key={reg.value} value={reg.value}>{reg.label}</option>)}
    </select>
  </div>

            <div> 
          <select className={styles.dropdown} id="category" onChange={onChangeCategoryState} value={categoryState}>
          <option value="0">Category:</option>
          {category.map(cat =><option key={cat.value} value={cat.value}>{cat.label}</option>)}
            </select>
        </div>
     {/* <FilterBar/>*/}
         <main className={styles.main}>
        <section>
          <MapComponent allLocationData={displayedData}/>
        </section>
        <section>
        <CardDisplay allLocationData={displayedData}/>
    </section>

    </main>



      
    </div>
  )
}


